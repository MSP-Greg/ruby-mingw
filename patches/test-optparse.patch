Patch by MSP-Greg
changed from class inheritance to include
frozen_string_literal: true
diff --git a/test/optparse/optparse_setup.rb b/test/optparse/optparse_setup.rb
index e69de29bb2..32a1494c30 100644
--- a/test/optparse/optparse_setup.rb
+++ b/test/optparse/optparse_setup.rb
@@ -0,0 +1,85 @@
+# frozen_string_literal: true
+require 'test/unit'
+require 'optparse'
+
+module TestOptionParser ; end
+
+module OptionParserDummy
+  class DummyOutput < String
+    alias write concat
+  end
+  def assert_no_error(*args)
+    $stderr, stderr = DummyOutput.new, $stderr
+    assert_nothing_raised(*args) {return yield}
+  ensure
+    stderr, $stderr = $stderr, stderr
+    $!.backtrace.delete_if {|e| /\A#{Regexp.quote(__FILE__)}:#{__LINE__-2}/o =~ e} if $!
+    assert_empty(stderr)
+  end
+  alias no_error assert_no_error
+end
+
+module OptionParserSetup
+
+  include OptionParserDummy
+
+  def setup
+    @opt = OptionParser.new
+    @flag = self.class		# cannot set by option
+  end
+
+  def test_permute
+    assert_equal(%w"", no_error {@opt.permute!(%w"")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo bar", no_error {@opt.permute!(%w"foo bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"- foo bar", no_error {@opt.permute!(%w"- foo bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo bar", no_error {@opt.permute!(%w"-- foo bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo - bar", no_error {@opt.permute!(%w"foo - bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo bar", no_error {@opt.permute!(%w"foo -- bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo --help bar", no_error {@opt.permute!(%w"foo -- --help bar")})
+    assert_equal(self.class, @flag)
+  end
+
+  def test_order
+    assert_equal(%w"", no_error {@opt.order!(%w"")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo bar", no_error {@opt.order!(%w"foo bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"- foo bar", no_error {@opt.order!(%w"- foo bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo bar", no_error {@opt.permute!(%w"-- foo bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo - bar", no_error {@opt.order!(%w"foo - bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo -- bar", no_error {@opt.order!(%w"foo -- bar")})
+    assert_equal(self.class, @flag)
+    assert_equal(%w"foo -- --help bar", no_error {@opt.order!(%w"foo -- --help bar")})
+    assert_equal(self.class, @flag)
+  end
+
+  def test_regexp
+    return unless defined?(@reopt)
+    assert_equal(%w"", no_error {@opt.parse!(%w"--regexp=/foo/")})
+    assert_equal(/foo/, @reopt)
+    assert_equal(%w"", no_error {@opt.parse!(%w"--regexp=/foo/i")})
+    assert_equal(/foo/i, @reopt)
+    assert_equal(%w"", no_error {@opt.parse!(%w"--regexp=/foo/n")})
+    assert_equal(/foo/n, @reopt)
+  end
+
+  def test_into
+    @opt.def_option "-h", "--host=HOST", "hostname"
+    @opt.def_option "-p", "--port=PORT", "port", Integer
+    @opt.def_option "-v", "--verbose" do @verbose = true end
+    @opt.def_option "-q", "--quiet" do @quiet = true end
+    result = {}
+    @opt.parse %w(--host localhost --port 8000 -v), into: result
+    assert_equal({host: "localhost", port: 8000, verbose: true}, result)
+    assert_equal(true, @verbose)
+  end
+end
diff --git a/test/optparse/test_acceptable.rb b/test/optparse/test_acceptable.rb
index 5c3fbdb10c..802482302d 100644
--- a/test/optparse/test_acceptable.rb
+++ b/test/optparse/test_acceptable.rb
@@ -1,7 +1,9 @@
-# frozen_string_literal: false
-require_relative 'test_optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 
-class TestOptionParser::Acceptable < TestOptionParser
+class TestOptionParser::Acceptable < Test::Unit::TestCase
+
+  include OptionParserSetup
 
   def setup
     super
diff --git a/test/optparse/test_autoconf.rb b/test/optparse/test_autoconf.rb
index 3be4a4c598..d720606329 100644
--- a/test/optparse/test_autoconf.rb
+++ b/test/optparse/test_autoconf.rb
@@ -1,10 +1,11 @@
-# frozen_string_literal: false
-require 'test/unit'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 require 'optparse/ac'
 
-class TestOptionParser < Test::Unit::TestCase; end
-
 class TestOptionParser::AutoConf < Test::Unit::TestCase
+
+  include OptionParserDummy
+
   def setup
     @opt = OptionParser::AC.new
     @foo = @bar = self.class
@@ -13,18 +14,6 @@ def setup
     @opt.ac_arg_with("zot", "zot option") {|x| @zot = x}
   end
 
-  class DummyOutput < String
-    alias write concat
-  end
-  def no_error(*args)
-    $stderr, stderr = DummyOutput.new, $stderr
-    assert_nothing_raised(*args) {return yield}
-  ensure
-    stderr, $stderr = $stderr, stderr
-    $!.backtrace.delete_if {|e| /\A#{Regexp.quote(__FILE__)}:#{__LINE__-2}/o =~ e} if $!
-    assert_empty(stderr)
-  end
-
   def test_enable
     @opt.parse!(%w"--enable-foo")
     assert_equal(true, @foo)
diff --git a/test/optparse/test_bash_completion.rb b/test/optparse/test_bash_completion.rb
index 513e986f66..8f6ff6f93a 100644
--- a/test/optparse/test_bash_completion.rb
+++ b/test/optparse/test_bash_completion.rb
@@ -1,9 +1,6 @@
-# frozen_string_literal: false
-require 'test/unit'
-require 'optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 
-class TestOptionParser < Test::Unit::TestCase
-end
 class TestOptionParser::BashCompletion < Test::Unit::TestCase
   def setup
     @opt = OptionParser.new
diff --git a/test/optparse/test_cclass.rb b/test/optparse/test_cclass.rb
index ac46f46bb2..7abe3e1d14 100644
--- a/test/optparse/test_cclass.rb
+++ b/test/optparse/test_cclass.rb
@@ -1,7 +1,10 @@
-# frozen_string_literal: false
-require_relative 'test_optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
+
+class TestOptionParser::CClass < Test::Unit::TestCase
+
+  include OptionParserSetup
 
-class TestOptionParser::CClass < TestOptionParser
   def test_no_argument
     flags = []
     @opt.def_option("-[a-z]") {|x| flags << x}
diff --git a/test/optparse/test_getopts.rb b/test/optparse/test_getopts.rb
index 3711e6f269..41627597cf 100644
--- a/test/optparse/test_getopts.rb
+++ b/test/optparse/test_getopts.rb
@@ -1,9 +1,6 @@
-# frozen_string_literal: false
-require 'test/unit'
-require 'optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 
-class TestOptionParser < Test::Unit::TestCase
-end
 class TestOptionParser::Getopts < Test::Unit::TestCase
   def setup
     @opt = OptionParser.new
diff --git a/test/optparse/test_kwargs.rb b/test/optparse/test_kwargs.rb
index 78d7e2ee9c..555caa991a 100644
--- a/test/optparse/test_kwargs.rb
+++ b/test/optparse/test_kwargs.rb
@@ -1,11 +1,11 @@
-# frozen_string_literal: false
-require 'test/unit'
-require 'optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 require 'optparse/kwargs'
 
-class TestOptionParser < Test::Unit::TestCase
-end
 class TestOptionParser::KwArg < Test::Unit::TestCase
+
+  include OptionParserDummy
+
   class K
     def initialize(host:, port: 8080)
       @host = host
@@ -13,19 +13,6 @@ def initialize(host:, port: 8080)
     end
   end
 
-  class DummyOutput < String
-    alias write concat
-  end
-  def assert_no_error(*args)
-    $stderr, stderr = DummyOutput.new, $stderr
-    assert_nothing_raised(*args) {return yield}
-  ensure
-    stderr, $stderr = $stderr, stderr
-    $!.backtrace.delete_if {|e| /\A#{Regexp.quote(__FILE__)}:#{__LINE__-2}/o =~ e} if $!
-    assert_empty(stderr)
-  end
-  alias no_error assert_no_error
-
   def test_kwarg
     opt = OptionParser.new
     options = opt.define_by_keywords({}, K.instance_method(:initialize),
diff --git a/test/optparse/test_noarg.rb b/test/optparse/test_noarg.rb
index 8f20519408..426d249bfc 100644
--- a/test/optparse/test_noarg.rb
+++ b/test/optparse/test_noarg.rb
@@ -1,23 +1,27 @@
-# frozen_string_literal: false
-require_relative 'test_optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 
 module TestOptionParser::NoArg
+
+  include OptionParserSetup
+
   def setup
     super
     @opt.def_option "--with_underscore" do |x| @flag = x end
     @opt.def_option "--with-hyphen" do |x| @flag = x end
   end
 
-  class Def1 < TestOptionParser
-    include NoArg
+  class Def1 < Test::Unit::TestCase
+    
+    include TestOptionParser::NoArg
     def setup
       super
       @opt.def_option("-x") {|x| @flag = x}
       @opt.def_option("--option") {|x| @flag = x}
     end
   end
-  class Def2 < TestOptionParser
-    include NoArg
+  class Def2 < Test::Unit::TestCase
+    include TestOptionParser::NoArg
     def setup
       super
       @opt.def_option("-x", "--option") {|x| @flag = x}
diff --git a/test/optparse/test_optarg.rb b/test/optparse/test_optarg.rb
index 14584f7e89..476d1e7d8c 100644
--- a/test/optparse/test_optarg.rb
+++ b/test/optparse/test_optarg.rb
@@ -1,7 +1,10 @@
-# frozen_string_literal: false
-require_relative 'test_optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
+
+class TestOptionParser::OptArg < Test::Unit::TestCase
+
+  include OptionParserSetup
 
-class TestOptionParser::OptArg < TestOptionParser
   def setup
     super
     @opt.def_option("-x[VAL]") {|x| @flag = x}
diff --git a/test/optparse/test_optparse.rb b/test/optparse/test_optparse.rb
index e4aeb07aac..517297019d 100644
--- a/test/optparse/test_optparse.rb
+++ b/test/optparse/test_optparse.rb
@@ -1,78 +1,8 @@
-# frozen_string_literal: false
-require 'test/unit'
-require 'optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 
-class TestOptionParser < Test::Unit::TestCase
-  def setup
-    @opt = OptionParser.new
-    @flag = self.class		# cannot set by option
-  end
+class TestOptionParser::Main < Test::Unit::TestCase
 
-  class DummyOutput < String
-    alias write concat
-  end
-  def assert_no_error(*args)
-    $stderr, stderr = DummyOutput.new, $stderr
-    assert_nothing_raised(*args) {return yield}
-  ensure
-    stderr, $stderr = $stderr, stderr
-    $!.backtrace.delete_if {|e| /\A#{Regexp.quote(__FILE__)}:#{__LINE__-2}/o =~ e} if $!
-    assert_empty(stderr)
-  end
-  alias no_error assert_no_error
+  include OptionParserSetup
 
-  def test_permute
-    assert_equal(%w"", no_error {@opt.permute!(%w"")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo bar", no_error {@opt.permute!(%w"foo bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"- foo bar", no_error {@opt.permute!(%w"- foo bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo bar", no_error {@opt.permute!(%w"-- foo bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo - bar", no_error {@opt.permute!(%w"foo - bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo bar", no_error {@opt.permute!(%w"foo -- bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo --help bar", no_error {@opt.permute!(%w"foo -- --help bar")})
-    assert_equal(self.class, @flag)
-  end
-
-  def test_order
-    assert_equal(%w"", no_error {@opt.order!(%w"")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo bar", no_error {@opt.order!(%w"foo bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"- foo bar", no_error {@opt.order!(%w"- foo bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo bar", no_error {@opt.permute!(%w"-- foo bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo - bar", no_error {@opt.order!(%w"foo - bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo -- bar", no_error {@opt.order!(%w"foo -- bar")})
-    assert_equal(self.class, @flag)
-    assert_equal(%w"foo -- --help bar", no_error {@opt.order!(%w"foo -- --help bar")})
-    assert_equal(self.class, @flag)
-  end
-
-  def test_regexp
-    return unless defined?(@reopt)
-    assert_equal(%w"", no_error {@opt.parse!(%w"--regexp=/foo/")})
-    assert_equal(/foo/, @reopt)
-    assert_equal(%w"", no_error {@opt.parse!(%w"--regexp=/foo/i")})
-    assert_equal(/foo/i, @reopt)
-    assert_equal(%w"", no_error {@opt.parse!(%w"--regexp=/foo/n")})
-    assert_equal(/foo/n, @reopt)
-  end
-
-  def test_into
-    @opt.def_option "-h", "--host=HOST", "hostname"
-    @opt.def_option "-p", "--port=PORT", "port", Integer
-    @opt.def_option "-v", "--verbose" do @verbose = true end
-    @opt.def_option "-q", "--quiet" do @quiet = true end
-    result = {}
-    @opt.parse %w(--host localhost --port 8000 -v), into: result
-    assert_equal({host: "localhost", port: 8000, verbose: true}, result)
-    assert_equal(true, @verbose)
-  end
 end
diff --git a/test/optparse/test_placearg.rb b/test/optparse/test_placearg.rb
index 8acfdb2161..2d9dbf6d7f 100644
--- a/test/optparse/test_placearg.rb
+++ b/test/optparse/test_placearg.rb
@@ -1,7 +1,10 @@
-# frozen_string_literal: false
-require_relative 'test_optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
+
+class TestOptionParser::PlaceArg < Test::Unit::TestCase
+
+  include OptionParserSetup
 
-class TestOptionParser::PlaceArg < TestOptionParser
   def setup
     super
     @opt.def_option("-x [VAL]") {|x| @flag = x}
diff --git a/test/optparse/test_reqarg.rb b/test/optparse/test_reqarg.rb
index b2e4755f80..e136c65d94 100644
--- a/test/optparse/test_reqarg.rb
+++ b/test/optparse/test_reqarg.rb
@@ -1,15 +1,18 @@
-# frozen_string_literal: false
-require_relative 'test_optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 
 module TestOptionParser::ReqArg
+
+  include OptionParserSetup
+
   def setup
     super
     @opt.def_option "--with_underscore=VAL" do |x| @flag = x end
     @opt.def_option "--with-hyphen=VAL" do |x| @flag = x end
   end
 
-  class Def1 < TestOptionParser
-    include ReqArg
+  class Def1 < Test::Unit::TestCase
+    include TestOptionParser::ReqArg # ReqArg
     def setup
       super
       @opt.def_option("-xVAL") {|x| @flag = x}
@@ -18,22 +21,22 @@ def setup
       @reopt = nil
     end
   end
-  class Def2 < TestOptionParser
-    include ReqArg
+  class Def2 < Test::Unit::TestCase
+    include TestOptionParser::ReqArg  # ReqArg
     def setup
       super
       @opt.def_option("-x", "--option=VAL") {|x| @flag = x}
     end
   end
-  class Def3 < TestOptionParser
-    include ReqArg
+  class Def3 < Test::Unit::TestCase
+    include TestOptionParser::ReqArg  # ReqArg
     def setup
       super
       @opt.def_option("--option=VAL", "-x") {|x| @flag = x}
     end
   end
-  class Def4 < TestOptionParser
-    include ReqArg
+  class Def4 < Test::Unit::TestCase
+    include TestOptionParser::ReqArg  # ReqArg
     def setup
       super
       @opt.def_option("-xVAL", "--option=VAL") {|x| @flag = x}
@@ -81,8 +84,11 @@ def test_hyphenize
     assert_equal("foo4", @flag)
   end
 
-  class TestOptionParser::WithPattern < TestOptionParser
-    def test_pattern
+  class TestOptionParser::WithPattern < Test::Unit::TestCase
+
+  include OptionParserSetup
+
+  def test_pattern
       pat = num = nil
       @opt.def_option("--pattern=VAL", /(\w+)(?:\s*:\s*(\w+))?/) {|x, y, z| pat = [x, y, z]}
       @opt.def_option("-T NUM", /\A[1-4]\z/) {|n| num = n}
diff --git a/test/optparse/test_summary.rb b/test/optparse/test_summary.rb
index b743aa00c1..35a2eb0a3e 100644
--- a/test/optparse/test_summary.rb
+++ b/test/optparse/test_summary.rb
@@ -1,7 +1,10 @@
-# frozen_string_literal: false
-require_relative 'test_optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
+
+class TestOptionParser::SummaryTest < Test::Unit::TestCase
+
+  include OptionParserSetup
 
-class TestOptionParser::SummaryTest < TestOptionParser
   def test_short_clash
     r = nil
     o = OptionParser.new do |opts|
diff --git a/test/optparse/test_zsh_completion.rb b/test/optparse/test_zsh_completion.rb
index 1bc6c7f0bb..8f098d22ed 100644
--- a/test/optparse/test_zsh_completion.rb
+++ b/test/optparse/test_zsh_completion.rb
@@ -1,10 +1,7 @@
-# frozen_string_literal: false
-require 'test/unit'
-require 'optparse'
+# frozen_string_literal: true
+require_relative 'optparse_setup'
 
-class TestOptionParser < Test::Unit::TestCase
-end
-class TestOptionParser::BashCompletion < Test::Unit::TestCase
+class TestOptionParser::BashCompletionZSH < Test::Unit::TestCase
   def setup
     @opt = OptionParser.new
     @opt.define("-z", "zzz") {}
@@ -14,7 +11,7 @@ def setup
   end
 
   def test_compsys
-    compsys = @opt.compsys("", "zshcompsys")
+    compsys = @opt.compsys("".dup, "zshcompsys")
     assert_match(/\"-z\[zzz\]\"/, compsys)
     assert_match(/\"--foo\[\]\"/, compsys)
     assert_match(/\"--bar\[\]\"/, compsys)
