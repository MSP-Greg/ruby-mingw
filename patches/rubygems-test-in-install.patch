Patch by MSP-Greg
Allows running Core RubyGems tests from installed Ruby
diff --git a/lib/rubygems/test_case.rb b/lib/rubygems/test_case.rb
index ced33c4d11..344cae21ed 100644
--- a/lib/rubygems/test_case.rb
+++ b/lib/rubygems/test_case.rb
@@ -1278,6 +1278,7 @@ def build_rake_in(good=true)
     gem_ruby = Gem.ruby
     Gem.ruby = @@ruby
     env_rake = ENV["rake"]
+
     rake = (good ? @@good_rake : @@bad_rake)
     ENV["rake"] = rake
     yield rake
@@ -1320,8 +1321,6 @@ def self.rubybin
   end
 
   @@ruby = rubybin
-  @@good_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/good_rake.rb', __FILE__)}\""
-  @@bad_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/bad_rake.rb', __FILE__)}\""
 
   ##
   # Construct a new Gem::Dependency.
@@ -1509,14 +1508,20 @@ def self.load_cert cert_name
 
   def self.cert_path cert_name
     if 32 == (Time.at(2**32) rescue 32) then
-      cert_file =
-        File.expand_path "../../../test/rubygems/#{cert_name}_cert_32.pem",
-                         __FILE__
-
+      if test_path.empty?
+        cert_file =
+          File.expand_path "../../../test/rubygems/#{cert_name}_cert_32.pem",
+                           __FILE__
+      else
+        cert_file = File.join test_path, "#{cert_name}_cert_32.pem"
+      end
       return cert_file if File.exist? cert_file
     end
-
-    File.expand_path "../../../test/rubygems/#{cert_name}_cert.pem", __FILE__
+    if test_path.empty?
+      File.expand_path "../../../test/rubygems/#{cert_name}_cert.pem", __FILE__
+    else
+      File.join test_path, "#{cert_name}_cert.pem"
+    end
   end
 
   ##
@@ -1534,7 +1539,26 @@ def self.load_key key_name, passphrase = nil
   # Returns the path to the key named +key_name+ from <tt>test/rubygems</tt>
 
   def self.key_path key_name
-    File.expand_path "../../../test/rubygems/#{key_name}_key.pem", __FILE__
+    if test_path.empty?
+      File.expand_path "../../../test/rubygems/#{key_name}_key.pem", __FILE__
+    else
+      File.join test_path, "#{key_name}_key.pem"
+    end
+  end
+
+  def self.test_path
+    @@test_path ||= begin 
+      temp = $LOAD_PATH.reverse.find { |p| /test\/rubygems\z/ =~ p } || ''
+      r_bin = Gem::TestCase.rubybin
+      if temp.empty?
+        @@good_rake ||= "#{r_bin} \"#{File.expand_path('../../../test/rubygems/good_rake.rb', __FILE__)}\""
+        @@bad_rake  ||= "#{r_bin} \"#{File.expand_path('../../../test/rubygems/bad_rake.rb', __FILE__)}\""
+      else
+        @@good_rake ||= "#{r_bin} \"#{File.join temp, 'good_rake.rb'}\""
+        @@bad_rake  ||= "#{r_bin} \"#{File.join temp, 'bad_rake.rb'}\""
+      end
+      temp
+    end
   end
 
   # :stopdoc:
@@ -1596,3 +1620,5 @@ def self.key_path key_name
 END {tmpdirs.each {|dir| Dir.rmdir(dir)} if $$ == pid}
 Gem.clear_paths
 Gem.loaded_specs.clear
+# $LOAD_PATH has path to tests loaded
+Gem::TestCase.test_path
diff --git a/test/rubygems/test_gem.rb b/test/rubygems/test_gem.rb
index ddf0f7e04c..5cf20b7620 100644
--- a/test/rubygems/test_gem.rb
+++ b/test/rubygems/test_gem.rb
@@ -818,7 +818,11 @@ def test_self_platforms
   end
 
   def test_self_prefix
-    assert_equal @@project_dir, Gem.prefix
+    if Gem.method(:host).source_location[0].start_with? "#{@@project_dir}/"
+      assert_equal @@project_dir, Gem.prefix
+    else
+      assert_nil Gem.prefix
+    end
   end
 
   def test_self_prefix_libdir
diff --git a/test/rubygems/test_gem_commands_environment_command.rb b/test/rubygems/test_gem_commands_environment_command.rb
index 1451f03982..981c5afa3d 100644
--- a/test/rubygems/test_gem_commands_environment_command.rb
+++ b/test/rubygems/test_gem_commands_environment_command.rb
@@ -26,7 +26,9 @@ def test_execute
     assert_match %r|RUBY VERSION: \d+\.\d+\.\d+ \(.*\) \[.*\]|, @ui.output
     assert_match %r|INSTALLATION DIRECTORY: #{Regexp.escape @gemhome}|,
                  @ui.output
-    assert_match %r|RUBYGEMS PREFIX: |, @ui.output
+    if Gem.method(:host).source_location[0].start_with? "#{@@project_dir}/"
+      assert_match %r|RUBYGEMS PREFIX: |, @ui.output
+    end
     assert_match %r|RUBY EXECUTABLE:.*#{RbConfig::CONFIG['ruby_install_name']}|,
                  @ui.output
     assert_match %r|GIT EXECUTABLE: #{@cmd.send(:git_path)}|, @ui.output
diff --git a/test/rubygems/test_gem_commands_update_command.rb b/test/rubygems/test_gem_commands_update_command.rb
index 549e34c218..92521682aa 100644
--- a/test/rubygems/test_gem_commands_update_command.rb
+++ b/test/rubygems/test_gem_commands_update_command.rb
@@ -482,8 +482,10 @@ def test_update_rubygems_arguments
 
     arguments = @cmd.update_rubygems_arguments
 
-    assert_equal '--prefix',           arguments.shift
-    assert_equal Gem.prefix,           arguments.shift
+    if Gem.method(:host).source_location[0].start_with? "#{@@project_dir}/"
+      assert_equal '--prefix',           arguments.shift
+      assert_equal Gem.prefix,           arguments.shift
+    end
     assert_equal '--no-rdoc',          arguments.shift
     assert_equal '--no-ri',            arguments.shift
     assert_equal '--previous-version', arguments.shift
@@ -496,8 +498,10 @@ def test_update_rubygems_arguments_1_8_x
 
     arguments = @cmd.update_rubygems_arguments
 
-    assert_equal '--prefix',           arguments.shift
-    assert_equal Gem.prefix,           arguments.shift
+    if Gem.method(:host).source_location[0].start_with? "#{@@project_dir}/"
+      assert_equal '--prefix',           arguments.shift
+      assert_equal Gem.prefix,           arguments.shift
+    end
     assert_equal '--no-rdoc',          arguments.shift
     assert_equal '--no-ri',            arguments.shift
     assert_empty arguments
